---
description:
globs:
alwaysApply: false
---
# Development Workflow Guide

## Development Environment Setup
This project uses modern tooling for Cloudflare Workers development:

### Package Manager
- Uses **pnpm** as the package manager (see `packageManager` in [package.json](mdc:package.json))
- Lock file: [pnpm-lock.yaml](mdc:pnpm-lock.yaml)

### TypeScript Configuration
- [tsconfig.json](mdc:tsconfig.json) - Main TypeScript config
- Strict type checking enabled
- Module resolution for Cloudflare Workers

### Build System
- **Vite** for bundling and development server
- Configuration in [vite.config.ts](mdc:vite.config.ts)
- Cloudflare Workers plugin: `@cloudflare/vite-plugin`

## Available Scripts

### Development
- `pnpm dev` - Start development server with hot reload
- `pnpm build` - Build for production
- `pnpm preview` - Preview production build locally

### Testing
- `pnpm test` - Run tests with coverage
- `pnpm test:watch` - Run tests in watch mode
- `pnpm test:ui` - Run tests with UI interface

### Code Quality
- `pnpm lint` - Run ESLint and Prettier checks
- `pnpm format` - Format code with Prettier
- `pnpm typecheck` - Run TypeScript type checking

### Deployment
- `pnpm deploy` - Deploy to Cloudflare Workers via Wrangler

### Documentation
- `pnpm docs:dev` - Start VitePress documentation server
- `pnpm docs:build` - Build documentation
- `pnpm docs:preview` - Preview built documentation

## Testing Strategy

### Test Framework
- **Vitest** with Cloudflare Workers test environment
- Configuration: [vitest.config.ts](mdc:vitest.config.ts) and [vitest-env.d.ts](mdc:vitest-env.d.ts)
- Worker-specific test pool: `@cloudflare/vitest-pool-workers`

### Test Structure
Tests mirror the `src/` directory structure:
- Unit tests for storage implementations
- Integration tests for API routes
- Cron job testing
- Utility function testing

### Coverage
- Istanbul coverage reporting via `@vitest/coverage-istanbul`
- Coverage reports generated during test runs

## Configuration Files

### Wrangler Configuration
- [wrangler.jsonc](mdc:wrangler.jsonc) - Main Cloudflare Workers config
- [wrangler.vitest.jsonc](mdc:wrangler.vitest.jsonc) - Test environment config

### Environment Variables
Required environment variables:
- `TURBO_TOKEN` - Bearer token for API authentication (set via Wrangler secrets)
- `BUCKET_OBJECT_EXPIRATION_HOURS` - Cache TTL in hours
- `ENVIRONMENT` - deployment environment (development/production)

### Bindings
- `R2_STORE` - R2 bucket binding for object storage
- `KV_STORE` - KV namespace binding for key-value storage

## Cron Jobs
- Scheduled cleanup task defined in [src/crons/deleteOldCache.ts](mdc:src/crons/deleteOldCache.ts)
- Runs daily at 3 AM UTC (`0 3 * * *` in [wrangler.jsonc](mdc:wrangler.jsonc))
- Removes expired cache entries based on `BUCKET_OBJECT_EXPIRATION_HOURS`

## Code Style and Linting
- **ESLint** configuration in [eslint.config.mjs](mdc:eslint.config.mjs)
- **Prettier** for code formatting
- Import sorting via `@trivago/prettier-plugin-sort-imports`
- TypeScript ESLint rules for type safety
