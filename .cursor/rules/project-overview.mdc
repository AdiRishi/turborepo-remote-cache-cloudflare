---
description:
globs:
alwaysApply: false
---
# Turborepo Remote Cache Cloudflare - Project Overview

## Project Description
This project is a Turborepo remote cache server implementation specifically designed for Cloudflare Workers. It provides caching capabilities for Turborepo builds using either Cloudflare R2 or KV storage.

## Architecture Overview
The application follows a modular architecture:
- **Worker Handler**: Entry point at [src/index.ts](mdc:src/index.ts) that handles fetch and scheduled events
- **Routing Layer**: HTTP request routing via Hono framework in [src/routes/index.ts](mdc:src/routes/index.ts)
- **Storage Abstraction**: Pluggable storage layer supporting R2 and KV backends
- **API Endpoints**: Turborepo v8 API compatible endpoints and internal management routes

## Key Components

### Main Entry Point
- [src/index.ts](mdc:src/index.ts) - Main worker handler with fetch and scheduled event handlers
- Initializes StorageManager and handles global error cases

### Routing
- [src/routes/index.ts](mdc:src/routes/index.ts) - Main Hono app with CORS, error handling, and health checks
- [src/routes/v8/index.ts](mdc:src/routes/v8/index.ts) - Turborepo v8 API endpoints
- [src/routes/internal.ts](mdc:src/routes/internal.ts) - Internal management endpoints

### Storage Layer
- [src/storage/interface.d.ts](mdc:src/storage/interface.d.ts) - Storage interface definition
- [src/storage/storage-manager.ts](mdc:src/storage/storage-manager.ts) - Storage manager that handles R2/KV selection
- [src/storage/r2-storage.ts](mdc:src/storage/r2-storage.ts) - R2 storage implementation
- [src/storage/kv-storage.ts](mdc:src/storage/kv-storage.ts) - KV storage implementation

### Cron Jobs
- [src/crons/deleteOldCache.ts](mdc:src/crons/deleteOldCache.ts) - Scheduled cleanup of expired cache entries

## Configuration
- [wrangler.jsonc](mdc:wrangler.jsonc) - Cloudflare Workers configuration with R2/KV bindings
- [package.json](mdc:package.json) - Project dependencies and scripts
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration

## Testing
- Tests mirror the src directory structure under `tests/`
- Uses Vitest with Cloudflare Workers test environment
- Configuration in [vitest.config.ts](mdc:vitest.config.ts)

## Documentation
- VitePress documentation in `docs/` directory
- Covers setup, configuration, and usage guides
